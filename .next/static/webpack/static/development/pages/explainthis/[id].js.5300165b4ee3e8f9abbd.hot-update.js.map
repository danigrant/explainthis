{"version":3,"file":"static/webpack/static/development/pages/explainthis/[id].js.5300165b4ee3e8f9abbd.hot-update.js","sources":["webpack:///./components/ExplanationsSection.js"],"sourcesContent":["import React from 'react'\nimport parse from 'html-react-parser';\nimport { addVote } from './Firebase'\nimport Link from 'next/link'\n\nclass ExplanationsSection extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loggedInUser: '@barackobama',\n      explanations: this.props.explanations\n    }\n  }\n  componentWillMount() {\n    console.log(this.props)\n  }\n  handleVote = (vote, explanationID, props) => {\n    addVote(vote, this.state.loggedInUser, explanationID)\n    console.log(`this.props: ${JSON.stringify(props)}`);\n  }\n  render() {\n    return (\n      <div className=\"explanationsSection\">\n       {\n         this.state.explanations.map((e) => {\n           return (\n             <div className=\"explanation\" id={`explanation-${e.id}`}>\n              {\n                this.props.profilepage &&\n                <Link href={`/explainthis/${e.concept}`}>\n                  <div className=\"link conceptName\">{`${e.author} explains ${e.concept}`}</div>\n                </Link>\n              }\n              {\n                !this.props.profilepage &&\n                <Link href={`/explainer/${e.author}`}>\n                  <div className=\"attribution link\">\n                    <img className=\"attributionAvatar\" src=\"https://pbs.twimg.com/profile_images/822547732376207360/5g0FC8XX.jpg\" />\n                    <p className=\"attributionUsername\">{e.author}</p>\n                  </div>\n                </Link>\n              }\n               <div className=\"explanationMeat\">\n                 {parse(e.explanation)}\n               </div>\n               <div className=\"explanationActionBar\">\n                 <div className=\"explanationAction\" onClick={() => this.handleVote(1, e.id).bind(this)}>\n                   <img src=\"/images/get-it-face.png\" />\n                   {e.score > 0 && <p className=\"score\">+ {e.score}</p>}\n                 </div>\n                 <div className=\"explanationAction\" onClick={() => this.handleVote(-1, e.id).bind(this)} >\n                   <img src=\"/images/dont-get-it-face.png\"/>\n                 </div>\n               </div>\n             </div>\n           )\n         })\n       }\n        <style jsx>{`\n          .explanation {\n            border-bottom: 1px solid #ddd;\n            margin-bottom: 20px;\n          }\n          .explanation:last-child {\n            border: none;\n          }\n          .attributionAvatar {\n            width: 30px;\n            border-radius: 50px;\n            display: inline-block;\n            position: relative;\n            top: 5px;\n          }\n          .attributionUsername {\n            display: inline-block;\n            margin-left: 10px;\n          }\n          .explanationMeat {\n            padding-bottom: 5px;\n          }\n          .explanationActionBar {\n            padding-bottom: 20px;\n          }\n          .explanationAction {\n            display: inline-block;\n            transition:0.3s;\n          }\n          .explanationAction:nth-of-type(2) {\n            margin-left: 35px;\n          }\n          .explanationAction img {\n            display: inline-block;\n            width: 24px;\n            position: relative;\n            top: 5px;\n            margin-right: 5px;\n          }\n          .explanationAction p {\n            display: inline-block;\n          }\n          explanationAction:hover {\n            transform: scale(1.1);\n            transform-origin: center;\n            filter: brightness(115%);\n            cursor: pointer;\n          }\n          .explanationAction:active:first-child {\n            transform: rotate(180deg)\n          }\n          .score {\n            margin-right: 10px;\n            color: #bbb;\n          }\n          .conceptName {\n            font-weight: bold;\n            font-size: 24px;\n          }\n          .link {\n            cursor:pointer;\n          }\n          .link:hover {\n            filter: brightness(115%);\n          }\n          .link:active {\n            filter: brightness(125%);\n          }\n        `}</style>\n      </div>\n    )\n  }\n}\n\nexport default ExplanationsSection\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAWA;AACA;AACA;AACA;AAZA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAAA;AACA;AACA;;;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAlCA;AAAA;AAAA;AA2GA;;;;AA5HA;AACA;AA8HA;;;;A","sourceRoot":""}