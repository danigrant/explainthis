{"version":3,"file":"static/webpack/static/development/pages/explainthis/[id].js.b747c14325870b72ca53.hot-update.js","sources":["webpack:///./components/AddExplanation.js"],"sourcesContent":["import React from 'react'\nimport Editor from './Editor'\nimport { Fireworks } from 'fireworks/lib/react'\n\nclass AddExplanation extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loggedInUser: '@barackobama',\n      concept: 'emergence'\n    }\n  }\n  render() {\n    let fxProps = {\n      count: 3,\n      interval: 200,\n      colors: ['#cc3333', '#4CAF50', '#81C784'],\n      calc: (props, i) => ({\n        ...props,\n        x: (i + 1) * (window.innerWidth / 3) - (i + 1) * 100,\n        y: 200 + Math.random() * 100 - 50 + (i === 2 ? -80 : 0)\n      })\n    }\n    return (\n      <div>\n        {\n          this.props.celebration &&\n          <Fireworks {...fxProps} />\n        }\n        <div onClick={this.props.handleAnswerClick} className=\"closeSection\"><i className=\"material-icons\">close_rounded</i></div>\n        <h1>Hi {this.state.loggedInUser}</h1>\n        <p>What do you think is the most fun and delightful way to explain <span className=\"concept-name\">{this.state.concept}</span>?</p>\n        <Editor placeholder={`Write something short, sweet and wonderfully wacky that explains ${this.state.concept}.`} />\n      <style jsx>{`\n        .closeSection {\n          position: relative;\n          float: right;\n          width: 30px;\n        }\n        h1 {\n          margin-bottom: 0;\n        }\n        p {\n          margin-top: 10px;\n          margin-bottom: 5px;\n          color: #a9a9a9;\n        }\n      `}</style>\n      </div>\n    )\n  }\n}\n\nexport default AddExplanation\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAHA;AAAA;AAJA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AA0BA;;;;AA9CA;AACA;AAgDA;;;;A","sourceRoot":""}