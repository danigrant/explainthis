{"version":3,"file":"static/webpack/static/development/pages/explainthis/[id].js.72e0f664e6c0a27eeb3b.hot-update.js","sources":["webpack:///./components/AddExplanation.js","webpack:///./node_modules/fireworks/lib/fireworks.js","webpack:///./node_modules/fireworks/lib/react.js"],"sourcesContent":["import React from 'react'\nimport Editor from './Editor'\nimport { Fireworks } from 'fireworks/lib/react'\n\n\nclass AddExplanation extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loggedInUser: '@barackobama',\n      concept: 'emergence'\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div onClick={this.props.handleAnswerClick} className=\"closeSection\"><i className=\"material-icons\">close_rounded</i></div>\n        <h1>Hi {this.state.loggedInUser}</h1>\n        <p>What do you think is the most fun and delightful way to explain <span className=\"concept-name\">{this.state.concept}</span>?</p>\n        <Editor placeholder={`Write something short, sweet and wonderfully wacky that explains ${this.state.concept}.`} />\n      <style jsx>{`\n        .closeSection {\n          position: relative;\n          float: right;\n          width: 30px;\n        }\n        h1 {\n          margin-bottom: 0;\n        }\n        p {\n          margin-top: 10px;\n          margin-bottom: 5px;\n          color: #a9a9a9;\n        }\n      `}</style>\n      </div>\n    )\n  }\n}\n\nexport default AddExplanation\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = fireworks;\nfunction fireworks(opts) {\n    if (!opts) {\n        throw new Error('Missing options for fireworks');\n    }\n    let { x, y, colors = [], count: bubbleCount = 25, parentNode = document.body } = opts;\n    let particles = [];\n    let ratio = window.devicePixelRatio;\n    let cvs = document.createElement('canvas');\n    let ctx = cvs.getContext('2d');\n    if (!ctx) {\n        console.log(`fireworks: unable to get 2d canvas context`);\n        return;\n    }\n    cvs.style.position = 'absolute';\n    cvs.style.left = `${x - 150}px`;\n    cvs.style.top = `${y - 150}px`;\n    cvs.style.pointerEvents = 'none';\n    cvs.style.width = `${300}px`;\n    cvs.style.height = `${300}px`;\n    cvs.style.zIndex = '100';\n    cvs.width = 300 * ratio;\n    cvs.height = 300 * ratio;\n    parentNode.appendChild(cvs);\n    for (let i = 0; i < bubbleCount; i++) {\n        particles.push({\n            x: cvs.width / 2,\n            y: cvs.height / 2,\n            radius: randomRange(10, 25),\n            color: colors[Math.floor(Math.random() * colors.length)],\n            rotation: randomRange(0, 360, -1),\n            speed: randomRange(6, 10),\n            friction: 0.96,\n            opacity: randomRange(0, 0.5, -1),\n            yVel: 0,\n            gravity: 0.05\n        });\n    }\n    render(cvs.width, cvs.height, particles, ctx);\n    setTimeout(function () {\n        parentNode.removeChild(cvs);\n    }, 1000);\n}\nexports.fireworks = fireworks;\nfunction render(width, height, particles, ctx) {\n    requestAnimationFrame(() => {\n        render(width, height, particles, ctx);\n    });\n    ctx.clearRect(0, 0, width, height);\n    particles.forEach(function (p, i) {\n        p.x += p.speed * Math.cos((p.rotation * Math.PI) / 180);\n        p.y += p.speed * Math.sin((p.rotation * Math.PI) / 180);\n        p.opacity -= 0.005;\n        p.speed *= p.friction;\n        p.radius *= p.friction;\n        p.yVel += p.gravity;\n        p.y += p.yVel;\n        if (p.opacity < 0 || p.radius < 0) {\n            return;\n        }\n        ctx.beginPath();\n        ctx.globalAlpha = p.opacity;\n        ctx.fillStyle = p.color;\n        ctx.arc(p.x, p.y, p.radius, 0, 2 * Math.PI, false);\n        ctx.fill();\n    });\n    return ctx;\n}\nfunction randomRange(a, b, c = 0) {\n    return parseFloat((Math.random() * ((a ? a : 1) - (b ? b : 0)) + (b ? b : 0)).toFixed(c > 0 ? c : 0));\n}\n","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nconst fireworks_1 = __importDefault(require(\"./fireworks\"));\nclass Fireworks extends React.Component {\n    constructor() {\n        super(...arguments);\n        this._ivl = 0;\n        this._idle = false;\n        this._ref = null;\n    }\n    render() {\n        return React.createElement('div', {\n            ref: ref => (this._ref = ref),\n            className: 'react-fireworks'\n        });\n    }\n    componentDidMount() {\n        let self = this;\n        let { interval } = this.props;\n        if (interval) {\n            this._ivl = window.setInterval(function () {\n                if (self._idle)\n                    return;\n                self.evaluate();\n            }, interval);\n            this.evaluate();\n        }\n        else {\n            this.evaluate();\n        }\n    }\n    onIdle() {\n        this._idle = true;\n    }\n    componentWillUnmount() {\n        if (this._ivl) {\n            clearInterval(this._ivl);\n        }\n    }\n    evaluate() {\n        let _a = this.props, { count, calc, interval } = _a, props = __rest(_a, [\"count\", \"calc\", \"interval\"]);\n        let input = props;\n        if (!input.parentNode) {\n            if (this._ref) {\n                input.parentNode = this._ref;\n            }\n        }\n        for (let i = 0; i < (count || 1); i++) {\n            fireworks_1.default(calc ? calc(props, i) : input);\n        }\n    }\n}\nexports.Fireworks = Fireworks;\nexports.default = Fireworks;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAsBA;;;;AAhCA;AACA;AAkCA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}