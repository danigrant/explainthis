{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport * as firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: process.env.FIREBASE_API_KEY,\n  authDomain: \"explain-this.firebaseapp.com\",\n  databaseURL: \"https://explain-this.firebaseio.com\",\n  projectId: \"explain-this\",\n  storageBucket: \"explain-this.appspot.com\",\n  messagingSenderId: \"145315125752\",\n  appId: \"1:145315125752:web:4e7c3fe717a051b0471e0d\",\n  measurementId: \"G-2HP7D44T1F\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar db = firebase.firestore();\nvar conceptsRef = db.collection('concepts');\n\nfunction getConcept(_x) {\n  return _getConcept.apply(this, arguments);\n}\n\nfunction _getConcept() {\n  _getConcept = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(concept) {\n    var tempConcept, snapshot, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tempConcept = '';\n            _context.next = 3;\n            return conceptsRef.where('concept', '==', concept).get();\n\n          case 3:\n            snapshot = _context.sent;\n            data = []; // snapshot.forEach(doc => {\n            //   doc.data()\n            // })\n            // .then(snapshot => {\n            //    if (snapshot.empty) {\n            //      console.log('nothing');\n            //      return;\n            //    }\n            //\n            //    snapshot.forEach(doc => {\n            //      return doc.data()\n            //    })\n            //  })\n            // .catch(err => {\n            //    console.log(err);\n            //  })\n\n            return _context.abrupt(\"return\", data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getConcept.apply(this, arguments);\n}\n\nconsole.log(getConcept('emergence'));\nexport default getConcept; // https://firebase.google.com/docs/firestore/query-data/get-data","map":{"version":3,"sources":["/Users/danigrant/Projects/explainthis/components/Firebase.js"],"names":["firebase","firebaseConfig","apiKey","process","env","FIREBASE_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","db","firestore","conceptsRef","collection","getConcept","concept","tempConcept","where","get","snapshot","data","console","log"],"mappings":";;AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADD;AAEnBC,EAAAA,UAAU,EAAE,8BAFO;AAGnBC,EAAAA,WAAW,EAAE,qCAHM;AAInBC,EAAAA,SAAS,EAAE,cAJQ;AAKnBC,EAAAA,aAAa,EAAE,0BALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB;;AAWA,IAAI,CAACZ,QAAQ,CAACa,IAAT,CAAcC,MAAnB,EAA2B;AACzBd,EAAAA,QAAQ,CAACe,aAAT,CAAuBd,cAAvB;AACD;;AAED,IAAMe,EAAE,GAAGhB,QAAQ,CAACiB,SAAT,EAAX;AACA,IAAMC,WAAW,GAAGF,EAAE,CAACG,UAAH,CAAc,UAAd,CAApB;;SAEeC,U;;;;;;;2BAAf,iBAA0BC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,YAAAA,WADN,GACoB,EADpB;AAAA;AAAA,mBAGuBJ,WAAW,CAACK,KAAZ,CAAkB,SAAlB,EAA6B,IAA7B,EAAmCF,OAAnC,EAA4CG,GAA5C,EAHvB;;AAAA;AAGMC,YAAAA,QAHN;AAIMC,YAAAA,IAJN,GAIa,EAJb,EAKE;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApBJ,6CAsBWA,IAtBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA0BAC,OAAO,CAACC,GAAR,CAAYR,UAAU,CAAC,WAAD,CAAtB;AAEA,eAAeA,UAAf,C,CAGA","sourcesContent":["import * as firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: \"explain-this.firebaseapp.com\",\n    databaseURL: \"https://explain-this.firebaseio.com\",\n    projectId: \"explain-this\",\n    storageBucket: \"explain-this.appspot.com\",\n    messagingSenderId: \"145315125752\",\n    appId: \"1:145315125752:web:4e7c3fe717a051b0471e0d\",\n    measurementId: \"G-2HP7D44T1F\"\n  };\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst db = firebase.firestore();\nconst conceptsRef = db.collection('concepts');\n\nasync function getConcept(concept) {\n  let tempConcept = ''\n\n  let snapshot = await conceptsRef.where('concept', '==', concept).get()\n  let data = []\n  // snapshot.forEach(doc => {\n  //   doc.data()\n  // })\n    // .then(snapshot => {\n    //    if (snapshot.empty) {\n    //      console.log('nothing');\n    //      return;\n    //    }\n    //\n    //    snapshot.forEach(doc => {\n    //      return doc.data()\n    //    })\n    //  })\n    // .catch(err => {\n    //    console.log(err);\n    //  })\n\n    return data\n\n}\n\nconsole.log(getConcept('emergence'))\n\nexport default getConcept\n\n\n// https://firebase.google.com/docs/firestore/query-data/get-data\n"]},"metadata":{},"sourceType":"module"}