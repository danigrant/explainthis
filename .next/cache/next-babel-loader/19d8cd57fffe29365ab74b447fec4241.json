{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/danigrant/Projects/explainthis/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport '../components/Firebase';\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyApp; //\n// function MyApp({ Component, pageProps }) {\n//   return (\n//     <div className=\"wrapper\">\n//     <Head>\n//       <link href=\"https://fonts.googleapis.com/css?family=IBM+Plex+Sans:400,600,700&display=swap\" rel=\"stylesheet\" />\n//       <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n//       <link rel=\"stylesheet\" href=\"//cdn.quilljs.com/1.2.6/quill.snow.css\" />\n//     </Head>\n//     <Component {...pageProps} />\n//     <style jsx>{`\n//         .wrapper {\n//           font-family: -apple-system, 'IBM Plex Sans', sans-serif;\n//         }\n//     `}</style>\n//     </div>\n//   )\n// }\n//\n// // Only uncomment this method if you have blocking data requirements for\n// // every single page in your application. This disables the ability to\n// // perform automatic static optimization, causing every page in your app to\n// // be server-side rendered.\n// //\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n//\n// export default MyApp","map":{"version":3,"sources":["/Users/danigrant/Projects/explainthis/pages/_app.js"],"names":["React","App","Head","MyApp","render","Component","pageProps","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,wBAAP;;AAEA,MAAMC,KAAN,SAAoBF,GAApB,CAAwB;AACtBG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WAAO,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAJqB;;AAOxB,eAAeH,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport App from 'next/app'\nimport Head from 'next/head';\nimport '../components/Firebase'\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps } = this.props\n    return <Component {...pageProps} />\n  }\n}\n\nexport default MyApp\n\n//\n// function MyApp({ Component, pageProps }) {\n//   return (\n//     <div className=\"wrapper\">\n//     <Head>\n//       <link href=\"https://fonts.googleapis.com/css?family=IBM+Plex+Sans:400,600,700&display=swap\" rel=\"stylesheet\" />\n//       <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n//       <link rel=\"stylesheet\" href=\"//cdn.quilljs.com/1.2.6/quill.snow.css\" />\n//     </Head>\n//     <Component {...pageProps} />\n//     <style jsx>{`\n//         .wrapper {\n//           font-family: -apple-system, 'IBM Plex Sans', sans-serif;\n//         }\n//     `}</style>\n//     </div>\n//   )\n// }\n//\n// // Only uncomment this method if you have blocking data requirements for\n// // every single page in your application. This disables the ability to\n// // perform automatic static optimization, causing every page in your app to\n// // be server-side rendered.\n// //\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n//\n// export default MyApp\n"]},"metadata":{},"sourceType":"module"}