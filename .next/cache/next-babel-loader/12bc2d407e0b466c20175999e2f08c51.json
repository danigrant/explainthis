{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/danigrant/Projects/explainthis/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { getAllConcepts } from '../components/Firebase';\nimport Link from 'next/link';\nimport AppContainer from '../components/AppContainer';\n\nvar Index = function Index(props) {\n  return __jsx(AppContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"A list of all the concepts\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, console.log('hello from index.js here are the props', props), props.concepts.map(function (concept) {\n    return __jsx(\"li\", {\n      key: concept.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/explainthis/[id]\",\n      as: \"/explainthis/\".concat(concept.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, concept.concept)));\n  })));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return getAllConcepts();\n\n        case 2:\n          data = _context.sent;\n          // [{\"id\":\"2Vwu1DWYmxG3DQ1GdT8u\",\"concept\":\"emergence\"},{\"id\":\"vUauhHDGkBYj54DjAgLw\",\"concept\":\"convexity\"}]\n          console.log(\"Show data fetched: \".concat(_JSON$stringify(data)));\n          return _context.abrupt(\"return\", {\n            concepts: data.map(function (entry) {\n              return entry.concept;\n            })\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["/Users/danigrant/Projects/explainthis/pages/index.js"],"names":["getAllConcepts","Link","AppContainer","Index","props","console","log","concepts","map","concept","id","getInitialProps","data","entry"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,wBAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDF,KAAtD,CADJ,EAEGA,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAmB,UAAAC,OAAO;AAAA,WACzB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,mBAAX;AAA+B,MAAA,EAAE,yBAAkBD,OAAO,CAACC,EAA1B,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,OAAO,CAACA,OAAZ,CADF,CADF,CADyB;AAAA,GAA1B,CAFH,CAFF,CADiB;AAAA,CAAnB;;AAgBAN,KAAK,CAACQ,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEHX,cAAc,EAFX;;AAAA;AAEhBY,UAAAA,IAFgB;AAEe;AAErCP,UAAAA,OAAO,CAACC,GAAR,8BAAkC,gBAAeM,IAAf,CAAlC;AAJsB,2CAMf;AACLL,YAAAA,QAAQ,EAAEK,IAAI,CAACJ,GAAL,CAAS,UAAAK,KAAK;AAAA,qBAAIA,KAAK,CAACJ,OAAV;AAAA,aAAd;AADL,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAWA,eAAeN,KAAf","sourcesContent":["import { getAllConcepts } from '../components/Firebase'\nimport Link from 'next/link'\nimport AppContainer from '../components/AppContainer'\n\nconst Index = props => (\n  <AppContainer>\n    <h1>A list of all the concepts</h1>\n    <ul>\n      { console.log('hello from index.js here are the props', props) }\n      {props.concepts.map(concept => (\n        <li key={concept.id}>\n          <Link href=\"/explainthis/[id]\" as={`/explainthis/${concept.id}`}>\n            <a>{concept.concept}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </AppContainer>\n);\n\nIndex.getInitialProps = async function() {\n\n  const data = await getAllConcepts(); // [{\"id\":\"2Vwu1DWYmxG3DQ1GdT8u\",\"concept\":\"emergence\"},{\"id\":\"vUauhHDGkBYj54DjAgLw\",\"concept\":\"convexity\"}]\n\n  console.log(`Show data fetched: ${JSON.stringify(data)}`);\n\n  return {\n    concepts: data.map(entry => entry.concept)\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}